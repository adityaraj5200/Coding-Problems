/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    long long maxProd = 0, total_sum = 0, mod = 1000000007;
    
    void dfs(TreeNode* root){
        if(root==NULL) return ;
        total_sum += (long long)root->val;
        dfs(root->left);
        dfs(root->right);
    }
    
    long long subtreesum(TreeNode* root){
        if(root==NULL) return 0;
        long long l = subtreesum(root->left);
        long long r = subtreesum(root->right);
        return root->val = root->val + l + r;
    }
    
    void trav(TreeNode* root){
        if(root==NULL) return;
        maxProd = max(maxProd, (root->val)*(total_sum - root->val));
        trav(root->left);
        trav(root->right);
    }
    
    int maxProduct(TreeNode* root) {
        dfs(root);
        subtreesum(root);
        trav(root);
        return (int)(maxProd % mod);
    }
};