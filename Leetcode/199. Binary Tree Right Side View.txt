/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> result;
        if(root==NULL) return result;
        
        queue<TreeNode*> q;
        q.push(root);
        // result.push_back(root->val);
        
        while(!q.empty()){
            int n = q.size(), last = -1;
            while(n--){
                TreeNode *Node = q.front();
                q.pop();
                last = Node->val;
                if(Node->left) q.push(Node->left);
                if(Node->right) q.push(Node->right);
            }
            result.push_back(last);
        }
        return result;
    }
};